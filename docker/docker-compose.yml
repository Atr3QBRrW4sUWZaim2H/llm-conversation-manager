version: '3.8'

# Load environment variables from .env file
env_file:
  - .env

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: llm-conversation-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-conversations}
      POSTGRES_USER: ${DB_USER:-conversation_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-conversation_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-conversation_user} -d ${DB_NAME:-conversations}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - llm-conversation-network

  # Main Application
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: llm-conversation-app
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-conversations}
      DB_USER: ${DB_USER:-conversation_user}
      DB_PASSWORD: ${DB_PASSWORD:-conversation_password}
      
      # Streamlit Configuration
      STREAMLIT_SERVER_PORT: ${STREAMLIT_SERVER_PORT:-8501}
      STREAMLIT_SERVER_ADDRESS: ${STREAMLIT_SERVER_ADDRESS:-0.0.0.0}
      STREAMLIT_SERVER_HEADLESS: ${STREAMLIT_SERVER_HEADLESS:-true}
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: ${STREAMLIT_BROWSER_GATHER_USAGE_STATS:-false}
      
      # Application Configuration
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      
      # Optional: For Claude imports
      CLAUDE_COOKIE: ${CLAUDE_COOKIE:-}
      USER_AGENT: ${USER_AGENT:-}
      
      # Optional: For image uploads
      IMGUR_BEARER: ${IMGUR_BEARER:-}
      GIST_PAT: ${GIST_PAT:-}
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./config:/app/config:ro
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - llm-conversation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: llm-conversation-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - llm-conversation-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  llm-conversation-network:
    driver: bridge